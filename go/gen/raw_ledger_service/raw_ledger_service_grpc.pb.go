// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v4.24.4
// source: raw_ledger_service/raw_ledger_service.proto

package raw_ledger_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	RawLedgerService_StreamRawLedgers_FullMethodName = "/raw_ledger_service.RawLedgerService/StreamRawLedgers"
)

// RawLedgerServiceClient is the client API for RawLedgerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type RawLedgerServiceClient interface {
	// Streams raw ledgers starting from a specific sequence indefinitely
	StreamRawLedgers(ctx context.Context, in *StreamLedgersRequest, opts ...grpc.CallOption) (RawLedgerService_StreamRawLedgersClient, error)
}

type rawLedgerServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewRawLedgerServiceClient(cc grpc.ClientConnInterface) RawLedgerServiceClient {
	return &rawLedgerServiceClient{cc}
}

func (c *rawLedgerServiceClient) StreamRawLedgers(ctx context.Context, in *StreamLedgersRequest, opts ...grpc.CallOption) (RawLedgerService_StreamRawLedgersClient, error) {
	stream, err := c.cc.NewStream(ctx, &RawLedgerService_ServiceDesc.Streams[0], RawLedgerService_StreamRawLedgers_FullMethodName, opts...)
	if err != nil {
		return nil, err
	}
	x := &rawLedgerServiceStreamRawLedgersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type RawLedgerService_StreamRawLedgersClient interface {
	Recv() (*RawLedger, error)
	grpc.ClientStream
}

type rawLedgerServiceStreamRawLedgersClient struct {
	grpc.ClientStream
}

func (x *rawLedgerServiceStreamRawLedgersClient) Recv() (*RawLedger, error) {
	m := new(RawLedger)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// RawLedgerServiceServer is the server API for RawLedgerService service.
// All implementations must embed UnimplementedRawLedgerServiceServer
// for forward compatibility
type RawLedgerServiceServer interface {
	// Streams raw ledgers starting from a specific sequence indefinitely
	StreamRawLedgers(*StreamLedgersRequest, RawLedgerService_StreamRawLedgersServer) error
	mustEmbedUnimplementedRawLedgerServiceServer()
}

// UnimplementedRawLedgerServiceServer must be embedded to have forward compatible implementations.
type UnimplementedRawLedgerServiceServer struct {
}

func (UnimplementedRawLedgerServiceServer) StreamRawLedgers(*StreamLedgersRequest, RawLedgerService_StreamRawLedgersServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamRawLedgers not implemented")
}
func (UnimplementedRawLedgerServiceServer) mustEmbedUnimplementedRawLedgerServiceServer() {}

// UnsafeRawLedgerServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to RawLedgerServiceServer will
// result in compilation errors.
type UnsafeRawLedgerServiceServer interface {
	mustEmbedUnimplementedRawLedgerServiceServer()
}

func RegisterRawLedgerServiceServer(s grpc.ServiceRegistrar, srv RawLedgerServiceServer) {
	s.RegisterService(&RawLedgerService_ServiceDesc, srv)
}

func _RawLedgerService_StreamRawLedgers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StreamLedgersRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RawLedgerServiceServer).StreamRawLedgers(m, &rawLedgerServiceStreamRawLedgersServer{stream})
}

type RawLedgerService_StreamRawLedgersServer interface {
	Send(*RawLedger) error
	grpc.ServerStream
}

type rawLedgerServiceStreamRawLedgersServer struct {
	grpc.ServerStream
}

func (x *rawLedgerServiceStreamRawLedgersServer) Send(m *RawLedger) error {
	return x.ServerStream.SendMsg(m)
}

// RawLedgerService_ServiceDesc is the grpc.ServiceDesc for RawLedgerService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var RawLedgerService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "raw_ledger_service.RawLedgerService",
	HandlerType: (*RawLedgerServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamRawLedgers",
			Handler:       _RawLedgerService_StreamRawLedgers_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "raw_ledger_service/raw_ledger_service.proto",
}
